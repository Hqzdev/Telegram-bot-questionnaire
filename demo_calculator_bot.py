#!/usr/bin/env python3
"""
–î–µ–º–æ-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è Telegram Bot
–¢–æ–ª—å–∫–æ –¥–µ–º–æ-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è FBS –∏ FBO —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
"""

import asyncio
import aiosqlite
import secrets
import string
from datetime import datetime
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command, CommandStart
from dotenv import load_dotenv
import os

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
db_path = "demo_bot.db"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(BOT_TOKEN, parse_mode="HTML")
dp = Dispatcher()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
async def init_db():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ–º–æ-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    async with aiosqlite.connect(db_path) as db:
        await db.execute("""CREATE TABLE IF NOT EXISTS events(
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER, event TEXT, payload TEXT, ts TEXT
        )""")
        await db.commit()

async def log_event(user_id: int, event: str, payload: str = ""):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    async with aiosqlite.connect(db_path) as db:
        await db.execute("INSERT INTO events(user_id,event,payload,ts) VALUES(?,?,?,?)",
                         (user_id, event, payload, datetime.utcnow().isoformat()))
        await db.commit()

def kb_fbs_demo():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è FBS –¥–µ–º–æ-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
    return InlineKeyboardMarkup(inline_keyboard=[[
        InlineKeyboardButton(text="–û—Ç–ª–æ–∂–∏—Ç—å 15 –º–∏–Ω", callback_data="demo:fbs:snooze15"),
        InlineKeyboardButton(text="–ì–æ—Ç–æ–≤–æ ‚úÖ", callback_data="demo:fbs:done")
    ],[
        InlineKeyboardButton(text="–°–≤–æ–¥–∫–∞ /summary", callback_data="demo:summary")
    ]])

def kb_fbo_demo():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è FBO –¥–µ–º–æ-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
    return InlineKeyboardMarkup(inline_keyboard=[[
        InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å —Å–ª–æ—Ç", callback_data="demo:fbo:slot"),
        InlineKeyboardButton(text="–ù–∞–ø–æ–º–Ω–∏—Ç—å —É—Ç—Ä–æ–º", callback_data="demo:fbo:morning")
    ],[
        InlineKeyboardButton(text="–°–≤–æ–¥–∫–∞ /summary", callback_data="demo:summary")
    ]])

async def send_demo_notifications(msg: Message):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–µ–º–æ-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    await msg.answer(
        "üîî –ó–∞–∫–∞–∑ #308132 ‚Äî –¥–µ–¥–ª–∞–π–Ω —á–µ—Ä–µ–∑ 1 —á 20 –º–∏–Ω\n"
        "FBS ¬∑ –ü–í–ó: –ú–æ—Å–∫–≤–∞, –õ–µ–Ω–∏–Ω–∞ 10 ¬∑ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –≤–∞–∂–Ω–æ\n\n"
        "–ß—Ç–æ —Å–¥–µ–ª–∞—Ç—å:\n‚Äî –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–±–æ—Ä–∫—É –∏ –º–∞—Ä–∫–∏—Ä–æ–≤–∫—É\n‚Äî –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∫—É—Ä—å–µ—Ä–∞/—Å–∞–º–æ–≤—ã–≤–æ–∑\n‚Äî –ù–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–π—Ç–µ: –ø–æ—Å–ª–µ –¥–µ–¥–ª–∞–π–Ω–∞ —Ä–µ–π—Ç–∏–Ω–≥ –∏ –æ—Ç–º–µ–Ω—ã",
        reply_markup=kb_fbs_demo()
    )
    await msg.answer(
        "‚è∞ –ü–æ—Å—Ç–∞–≤–∫–∞ FBO ‚Äî –¥–æ ¬´–∫—Ä–∞—Å–Ω–æ–π –∑–æ–Ω—ã¬ª 24 —á\n"
        "–†–∏—Å–∫ —É–¥–µ—Ä–∂–∞–Ω–∏—è: min(5 ‚ÇΩ √ó –µ–¥., 25 000 ‚ÇΩ)\n\n"
        "–ß—Ç–æ —Å–¥–µ–ª–∞—Ç—å:\n‚Äî –£—Ç–æ—á–Ω–∏—Ç–µ —Å–ª–æ—Ç (–ø–µ—Ä–µ–Ω–æ—Å–∏—Ç–µ –Ω–µ –ø–æ–∑–¥–Ω–µ–µ, —á–µ–º –∑–∞ 72 —á)\n‚Äî –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É–ø–∞–∫–æ–≤–∫—É, –≥–∞–±–∞—Ä–∏—Ç—ã –∏ –ø–∞–ª–ª–µ—Ç—ã\n‚Äî –ù–∞–∑–Ω–∞—á—å—Ç–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ",
        reply_markup=kb_fbo_demo()
    )

async def remind_later(chat_id: int, minutes: int):
    """–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç"""
    await asyncio.sleep(minutes * 60)
    await bot.send_message(chat_id, f"üîî –î–µ–º–æ-–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –ø—Ä–æ—à–ª–æ {minutes} –º–∏–Ω.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
@dp.message(CommandStart())
async def cmd_start(msg: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await msg.answer(
        "üéØ –î–µ–º–æ-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n\n"
        "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –±—É–¥—É—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–µ–¥–ª–∞–π–Ω–∞—Ö FBS –∏ —à—Ç—Ä–∞—Ñ–∞—Ö FBO.\n\n"
        "–ù–∞–∂–º–∏—Ç–µ /demo —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –¥–µ–º–æ-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
    )

@dp.message(Command("demo"))
async def demo(msg: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ–º–æ-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
    await send_demo_notifications(msg)

@dp.message(Command("help"))
async def help_cmd(msg: Message):
    """–°–ø—Ä–∞–≤–∫–∞"""
    await msg.answer(
        "üìã –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:\n\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
        "/demo - –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ–º–æ-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n"
        "/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n"
        "–î–µ–º–æ-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç:\n"
        "‚Ä¢ FBS - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–µ–¥–ª–∞–π–Ω–∞—Ö –∑–∞–∫–∞–∑–æ–≤\n"
        "‚Ä¢ FBO - –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ —à—Ç—Ä–∞—Ñ–∞—Ö –ø–æ—Å—Ç–∞–≤–æ–∫"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–µ–º–æ-–∫–Ω–æ–ø–æ–∫
@dp.callback_query(F.data.startswith("demo:"))
async def handle_demo_buttons(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–µ–º–æ-–∫–Ω–æ–ø–æ–∫"""
    await log_event(callback.from_user.id, "demo_click", callback.data)
    
    if callback.data == "demo:fbs:snooze15":
        await callback.answer("–û–∫, –Ω–∞–ø–æ–º–Ω—é —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç (–¥–µ–º–æ).")
        # –í –¥–µ–º–æ –º–æ–∂–Ω–æ —Ä–µ–∞–ª—å–Ω–æ –Ω–∞–ø–æ–º–Ω–∏—Ç—å:
        asyncio.create_task(remind_later(callback.message.chat.id, 15))
    elif callback.data == "demo:fbs:done":
        await callback.answer("–û—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ (–¥–µ–º–æ).")
    elif callback.data == "demo:fbo:slot":
        await callback.answer("–û–∫, –æ—Ç–∫—Ä–æ—é –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ –ø–µ—Ä–µ–Ω–æ—Å—É —Å–ª–æ—Ç–∞ (–¥–µ–º–æ).")
    elif callback.data == "demo:fbo:morning":
        await callback.answer("–ù–∞–ø–æ–º–Ω—é —É—Ç—Ä–æ–º (–¥–µ–º–æ).")
    elif callback.data == "demo:summary":
        await callback.message.answer("üìä –°–≤–æ–¥–∫–∞ (–¥–µ–º–æ): —Å–ø–∞—Å–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: 7 ¬∑ –∏–∑–±–µ–≥–Ω—É—Ç–æ —É–¥–µ—Ä–∂–∞–Ω–∏–π: 1")
        await callback.answer()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message()
async def handle_unknown(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    await message.answer("üëã –ù–∞–∂–º–∏—Ç–µ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–ª–∏ /demo —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    print("üéØ –î–µ–º–æ-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await init_db()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        await dp.start_polling(bot)
    except KeyboardInterrupt:
        print("‚èπ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
    finally:
        await bot.session.close()

if __name__ == "__main__":
    asyncio.run(main())

