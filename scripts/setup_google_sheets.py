#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
–ó–∞–ø—É—Å–∫–∞–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü—ã
"""

import asyncio
from google.oauth2.service_account import Credentials
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError

from config import Config
from utils import DataFormatter, logger

async def setup_google_sheets():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç Google Sheets —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏"""
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Google Sheets API
        credentials = Credentials.from_service_account_file(
            Config.GOOGLE_SHEETS_CREDENTIALS_FILE,
            scopes=['https://www.googleapis.com/auth/spreadsheets']
        )
        service = build('sheets', 'v4', credentials=credentials)
        
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
        headers = DataFormatter.get_sheet_headers()
        
        # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        try:
            service.spreadsheets().values().clear(
                spreadsheetId=Config.SPREADSHEET_ID,
                range=f"{Config.SHEET_NAME}!A:Z"
            ).execute()
            logger.info("–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã")
        except HttpError:
            pass
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
        body = {
            'values': [headers]
        }
        
        result = service.spreadsheets().values().update(
            spreadsheetId=Config.SPREADSHEET_ID,
            range=f"{Config.SHEET_NAME}!A1",
            valueInputOption='RAW',
            body=body
        ).execute()
        
        logger.info(f"–ó–∞–≥–æ–ª–æ–≤–∫–∏ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã: {result.get('updatedCells', 0)} —è—á–µ–µ–∫")
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ (–¥–µ–ª–∞–µ–º –∏—Ö –∂–∏—Ä–Ω—ã–º–∏)
        requests = [
            {
                'repeatCell': {
                    'range': {
                        'sheetId': 0,  # ID –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Å—Ç–∞
                        'startRowIndex': 0,
                        'endRowIndex': 1,
                        'startColumnIndex': 0,
                        'endColumnIndex': len(headers)
                    },
                    'cell': {
                        'userEnteredFormat': {
                            'textFormat': {
                                'bold': True
                            },
                            'backgroundColor': {
                                'red': 0.9,
                                'green': 0.9,
                                'blue': 0.9
                            }
                        }
                    },
                    'fields': 'userEnteredFormat.textFormat.bold,userEnteredFormat.backgroundColor'
                }
            }
        ]
        
        service.spreadsheets().batchUpdate(
            spreadsheetId=Config.SPREADSHEET_ID,
            body={'requests': requests}
        ).execute()
        
        logger.info("–ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        print("‚úÖ Google Sheets —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!")
        print(f"üìä –¢–∞–±–ª–∏—Ü–∞: {Config.SPREADSHEET_ID}")
        print(f"üìã –õ–∏—Å—Ç: {Config.SHEET_NAME}")
        print(f"üìù –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–æ–Ω–æ–∫: {len(headers)}")
        
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª service-account-key.json –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("üìù –°–æ–∑–¥–∞–π—Ç–µ —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç Google –∏ —Å–∫–∞—á–∞–π—Ç–µ –∫–ª—é—á")
    except HttpError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Google Sheets API: {e}")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    try:
        Config.validate()
        asyncio.run(setup_google_sheets())
    except ValueError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        print("üìù –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env")





