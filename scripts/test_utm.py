#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ UTM-–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
–ü–æ–º–æ–≥–∞–µ—Ç —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è –±–æ—Ç–∞ —Å UTM-—Ç—Ä–µ–∫–∏–Ω–≥–æ–º
"""

import base64
import json
import urllib.parse

def generate_utm_links(bot_username: str, utm_data: dict) -> dict:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Å—ã–ª–∫–∏ —Å UTM-–ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö
    
    Args:
        bot_username: Username –±–æ—Ç–∞ –±–µ–∑ @
        utm_data: –°–ª–æ–≤–∞—Ä—å —Å UTM-–ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    
    Returns:
        –°–ª–æ–≤–∞—Ä—å —Å —Å—Å—ã–ª–∫–∞–º–∏ –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö
    """
    
    # URL-encoded —Ñ–æ—Ä–º–∞—Ç
    utm_params = urllib.parse.urlencode(utm_data)
    url_encoded_link = f"https://t.me/{bot_username}?start={utm_params}"
    
    # Base64 JSON —Ñ–æ—Ä–º–∞—Ç
    json_data = json.dumps(utm_data, ensure_ascii=False)
    base64_payload = base64.b64encode(json_data.encode('utf-8')).decode('utf-8')
    base64_link = f"https://t.me/{bot_username}?start={base64_payload}"
    
    return {
        'url_encoded': url_encoded_link,
        'base64_json': base64_link,
        'utm_params': utm_params,
        'base64_payload': base64_payload
    }

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    
    print("üîó –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä UTM-—Å—Å—ã–ª–æ–∫ –¥–ª—è Telegram –±–æ—Ç–∞\n")
    
    # –ü—Ä–∏–º–µ—Ä—ã UTM-–¥–∞–Ω–Ω—ã—Ö
    examples = [
        {
            'name': 'Google Ads',
            'data': {
                'utm_source': 'google',
                'utm_medium': 'cpc',
                'utm_campaign': 'summer_sale',
                'utm_term': '–∫—É—Ä—Å—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è',
                'utm_content': 'banner_1'
            }
        },
        {
            'name': 'Facebook Ads',
            'data': {
                'utm_source': 'facebook',
                'utm_medium': 'social',
                'utm_campaign': 'winter_promo',
                'utm_content': 'video_ad'
            }
        },
        {
            'name': 'Email —Ä–∞—Å—Å—ã–ª–∫–∞',
            'data': {
                'utm_source': 'email',
                'utm_medium': 'email',
                'utm_campaign': 'newsletter_jan',
                'utm_content': 'main_cta'
            }
        }
    ]
    
    bot_username = input("–í–≤–µ–¥–∏—Ç–µ username –±–æ—Ç–∞ (–±–µ–∑ @): ").strip()
    if not bot_username:
        bot_username = "your_bot_username"
        print(f"–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏–º–µ—Ä: {bot_username}")
    
    print(f"\nüìä –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è –±–æ—Ç–∞ @{bot_username}:\n")
    
    for example in examples:
        print(f"üéØ {example['name']}:")
        links = generate_utm_links(bot_username, example['data'])
        
        print(f"   üìù UTM –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: {links['utm_params']}")
        print(f"   üîó URL-encoded: {links['url_encoded']}")
        print(f"   üîó Base64 JSON: {links['base64_json']}")
        print()
    
    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
    print("üõ† –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º:")
    print("–í–≤–µ–¥–∏—Ç–µ UTM-–ø–∞—Ä–∞–º–µ—Ç—Ä—ã (–ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –≤—ã—Ö–æ–¥–∞):")
    
    while True:
        source = input("\nutm_source: ").strip()
        if not source:
            break
            
        medium = input("utm_medium: ").strip()
        campaign = input("utm_campaign: ").strip()
        term = input("utm_term (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ): ").strip()
        content = input("utm_content (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ): ").strip()
        
        utm_data = {
            'utm_source': source,
            'utm_medium': medium,
            'utm_campaign': campaign
        }
        
        if term:
            utm_data['utm_term'] = term
        if content:
            utm_data['utm_content'] = content
        
        links = generate_utm_links(bot_username, utm_data)
        
        print(f"\n‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏:")
        print(f"üîó URL-encoded: {links['url_encoded']}")
        print(f"üîó Base64 JSON: {links['base64_json']}")
        print()

if __name__ == "__main__":
    main()





