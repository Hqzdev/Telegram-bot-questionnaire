#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
"""

import asyncio
import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

from aiogram import Bot
from aiogram.enums import ParseMode
from config import Config

async def test_notification():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª"""
    print("üì¢ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
        bot = Bot(token=Config.BOT_TOKEN, parse_mode=ParseMode.HTML)
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        test_data = {
            'lead_id': 'test-notification-123',
            'user_id': 123456789,
            'username': 'test_user',
            'tg_complete': datetime.now().isoformat(),
            'answers': {
                'platforms': 'Wildberries',
                'work_type': '–°–æ —Å–∫–ª–∞–¥–∞ –ø—Ä–æ–¥–∞–≤—Ü–∞ (FBS)',
                'volume_fbs': '50-200',
                'volume_fbo': '3-6',
                'main_concern': '–ü—Ä–æ—Å—Ä–æ—á–∫–∏ –ø–æ –∑–∞–∫–∞–∑–∞–º (FBS, –Ω–µ —É—Å–ø–µ–ª–∏ –∫ –¥–µ–¥–ª–∞–π–Ω—É)',
                'frequency': '1-3 —Ä–∞–∑–∞',
                'losses': '5-25 —Ç—ã—Å ‚ÇΩ',
                'reasons': ['–ù–µ —É—Å–ø–µ–≤–∞–µ–º —Å–æ–±—Ä–∞—Ç—å/—É–ø–∞–∫–æ–≤–∞—Ç—å', '–°–ª–æ—Ç/–ª–æ–≥–∏—Å—Ç–∏–∫–∞ —Å–æ—Ä–≤–∞–ª–∞—Å—å (–ø–æ—Å—Ç–∞–≤–∫–∞)'],
                'urgency': '–°—Ä–æ—á–Ω–æ',
                'price': '1-3 —Ç—ã—Å ‚ÇΩ'
            },
            'utm_data': {
                'utm_source': 'test',
                'utm_medium': 'test'
            }
        }
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        complete_time = datetime.fromisoformat(test_data['tg_complete']).strftime('%d.%m.%Y %H:%M:%S')
        
        notification_text = f"""
üéâ <b>–¢–ï–°–¢: –ù–æ–≤—ã–π –ª–∏–¥ –∑–∞–ø–æ–ª–Ω–∏–ª –∞–Ω–∫–µ—Ç—É!</b>

üìã <b>Lead ID:</b> <code>{test_data['lead_id']}</code>
üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> @{test_data['username']} (ID: {test_data['user_id']})
üìÖ <b>–í—Ä–µ–º—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è:</b> {complete_time}
üíæ <b>Google Sheets:</b> ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ

üìä <b>–û—Ç–≤–µ—Ç—ã:</b>
‚Ä¢ <b>–ì–¥–µ –≤—ã –ø—Ä–æ–¥–∞—ë—Ç–µ:</b> {test_data['answers']['platforms']}
‚Ä¢ <b>–ö–∞–∫ –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ:</b> {test_data['answers']['work_type']}
‚Ä¢ <b>FBS –∑–∞–∫–∞–∑—ã –≤ –º–µ—Å—è—Ü:</b> {test_data['answers']['volume_fbs']}
‚Ä¢ <b>FBO/FBW –ø–æ—Å—Ç–∞–≤–∫–∏ –≤ –º–µ—Å—è—Ü:</b> {test_data['answers']['volume_fbo']}
‚Ä¢ <b>–ì–ª–∞–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞:</b> {test_data['answers']['main_concern']}
‚Ä¢ <b>–ß–∞—Å—Ç–æ—Ç–∞ –ø—Ä–æ–±–ª–µ–º:</b> {test_data['answers']['frequency']}
‚Ä¢ <b>–ü–æ—Ç–µ—Ä–∏ –∑–∞ 30 –¥–Ω–µ–π:</b> {test_data['answers']['losses']}
‚Ä¢ <b>–ü—Ä–∏—á–∏–Ω—ã –ø—Ä–æ–±–ª–µ–º:</b> {', '.join(test_data['answers']['reasons'])}
‚Ä¢ <b>–°—Ä–æ—á–Ω–æ—Å—Ç—å:</b> {test_data['answers']['urgency']}
‚Ä¢ <b>–¶–µ–Ω–Ω–∏–∫:</b> {test_data['answers']['price']}

üè∑ <b>UTM-–ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>
‚Ä¢ <b>utm_source:</b> {test_data['utm_data']['utm_source']}
‚Ä¢ <b>utm_medium:</b> {test_data['utm_data']['utm_medium']}

‚úÖ <b>–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ Google Sheets!</b>
"""
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        await bot.send_message(Config.PRIVATE_CHANNEL_ID, notification_text, parse_mode='HTML')
        print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª")
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é
        await bot.session.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")
        print(f"–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {type(e).__name__}")

if __name__ == "__main__":
    asyncio.run(test_notification())
